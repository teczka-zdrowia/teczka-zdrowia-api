{"version":3,"sources":["webpack:///src/components/modal/modals/SignAgreement.vue","webpack:///./src/components/modal/modals/SignAgreement.vue?2710","webpack:///./src/components/modal/modals/SignAgreement.vue"],"names":["SignAgreement","name","data","apiUrl","constants","drawing","computed","extends_default","Object","vuex_esm","historyData","methods","hideModal","setHistory","saveAppointmentAgreement","_this","this","toBlob","file","payload","assign_default","agreement","addImageProcess","src","promise_default","a","resolve","reject","img","Image","onload","onerror","crossOrigin","mounted","_ref","asyncToGenerator_default","regenerator_default","mark","_callee","self","imageUrl","doFor","drawModeDelay","worldPoint","ctx","drawMode","pinchMode","startup","W","H","dCtx","mobileRatio","desktopRatio","imageScale","pointer","drawnPoints","iPoints","lastPt","drawOnDrawing","init","w","h","update","mouse","touch","setupPointingDevice","view","wrap","_context","prev","next","element","undefined","navigator","maxTouchPoints","appVersion","indexOf","points","x","y","count","rx","ry","m","t","newTouch","j","pCount","id","getTouch","setTouch","touchPoint","point","start","down","oy","pageX","ox","pageY","identifier","window","scrollY","touchEvent","e","i","p","changedTouches","type","length","tCount","mouseEmulator","preventDefault","document","push","dx","dy","forEach","addEventListener","getMouse","setMouse","mousePoint","mouseEvent","newMouse","timer","setTransform","globalAlpha","globalCompositeOperation","innerWidth","innerHeight","canvas","width","height","clearRect","apply","fillStyle","fillRect","drawImage","movePinch","setPinch","toWorld","requestAnimationFrame","setContext","lineWidth","beginPath","moveTo","lineTo","lineCap","stroke","template","callback","getContext","sent","createElement","font","matrix","invMatrix","im","scale","rotate","pinch1","pinch1R","pinchDist","pinchScale","pinchAngle","pinchStartAngle","pos","dirty","canvasDefault","reset","Math","cos","sin","invScale","cross","from","xx","yy","arguments","toScreen","p1","p2","sqrt","atan2","dontRotate","pDist","ang","context","stop","modals_SignAgreement","render","_h","$createElement","_c","_self","staticClass","ref","attrs","_v","on","click","aria-hidden","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"0OAoCAA,cACAC,KAAA,gBACAC,KAAA,WACA,OACAC,OAAAC,EAAA,EACAC,QAAA,OAGAC,SAAYC,OACZC,OAAAC,EAAA,EAAAD,EACAN,KAAA,aACAQ,YAAA,qBAGAC,QAAWJ,OACXC,OAAAC,EAAA,EAAAD,EACAI,UAAA,aACAC,WAAA,wBAEAC,yBAAA,eAAAC,EAAAC,KACAA,KAAAX,QACAY,OAAA,SAAAC,GACA,IAAAC,EAAAC,IAAAL,EAAAL,aACAW,UAAAH,IAGAH,EAAAF,WAAAM,GACAJ,EAAAH,eAGAU,gBAAA,SAAAC,GACA,WAAAC,EAAAC,EAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,MACAD,EAAAE,OAAA,kBAAAJ,EAAAE,IACAA,EAAAG,QAAAJ,EACAC,EAAAL,MACAK,EAAAI,YAAA,iBAIAC,QAAA,eAAAC,EAAAC,IAAAC,EAAAX,EAAAY,KAAA,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAnB,EAAAvB,EAAA2C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAuCAC,EAkBAC,EAzDAC,EAAAC,EAsEAC,EAsDAC,EAmFAC,EAkGAC,EAjTAC,EAAA,OAAA9B,EAAAX,EAAA0C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAiTAL,EAjTA,SAiTAM,GAUA,YATAC,IAAAC,UAAAC,iBAEAD,UAAAE,WAAAC,QAAA,eACAH,UAAAE,WAAAC,QAAA,cACAH,UAAAE,WAAAC,QAAA,cAEAH,UAAAC,eAAA,GAGAD,UAAAC,eAAA,EACAV,EAAAO,GAEAR,EAAAQ,IA/GAP,EA/MA,SA+MAO,GACA,IAAAP,GACAa,UACAC,EAAA,EACAC,EAAA,EAEAC,MAAA,EACApB,EAAA,EACAqB,GAAA,EACAC,GAAA,GAEAC,EAAAnB,EACAoB,EAAApB,EAAAa,OAEA,SAAAQ,IACA,QAAAC,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,IACA,QAAAF,EAAAE,GAAAE,GACA,OAAAJ,EAAAE,GAKA,SAAAG,EAAAD,GACA,QAAAF,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,IACA,GAAAF,EAAAE,GAAAE,OACA,OAAAJ,EAAAE,GAKA,SAAAI,EAAAC,EAAAC,EAAAC,EAAAC,QACAtB,IAAAmB,IAGAE,GACAF,EAAAI,GAAAH,EAAAI,MACAL,EAAAM,GAAAL,EAAAM,MACAP,EAAAH,GAAAI,EAAAO,aAEAR,EAAAM,GAAAN,EAAAb,EACAa,EAAAI,GAAAJ,EAAAZ,GAEAY,EAAAb,EAAAc,EAAAI,MACAL,EAAAZ,EAAAa,EAAAM,MAAAE,OAAAC,QACAV,EAAAG,OACAA,IACAH,EAAAH,IAAA,EACA/B,EAAA,KACAlB,EAAAlC,YAkBA,SAAAiG,EAAAC,GACA,IAAAC,EAAAC,EAEA,GADAA,EAAAF,EAAAG,eACA,eAAAH,EAAAI,KACA,IAAAH,EAAA,EAAAA,EAAAC,EAAAG,OAAAJ,IACAd,EAAAL,IAAAoB,EAAAD,IAAA,WAEA,iBAAAD,EAAAI,KACA,IAAAH,EAAA,EAAAA,EAAAC,EAAAG,OAAAJ,IACAd,EAAAD,EAAAgB,EAAAD,GAAAL,YAAAM,EAAAD,IAAA,WAEA,gBAAAD,EAAAI,KACA,IAAAH,EAAA,EAAAA,EAAAC,EAAAG,OAAAJ,IACAd,EAAAD,EAAAgB,EAAAD,GAAAL,YAAAM,EAAAD,IAAA,MAKA,OAhCA,WAEA,IADA,IAAAK,EAAA,EACAvB,EAAA,EAAAA,EAAAH,EAAAI,OAAAD,KACA,IAAAF,EAAAE,GAAAE,KACA,IAAAqB,IACA1B,EAAAL,EAAAM,EAAAE,GAAAR,EACAK,EAAAJ,EAAAK,EAAAE,GAAAP,GAEA8B,GAAA,GAGA1B,EAAAH,MAAA6B,EAmBAC,GACAP,EAAAQ,kBACA,EAWA,OARA/C,EAAAuB,OAAAd,UAAAC,eACAH,OAAAC,IAAAD,EAAAyC,SAAAzC,EACA9B,EAAAgC,UAAAC,eAAA,kBACAV,EAAAa,OAAAoC,MAAAnC,EAAA,EAAAC,EAAA,EAAAmC,GAAA,EAAAC,GAAA,EAAArB,MAAA,EAAAN,IAAA,OAEA,qCAAA4B,QAAA,SAAAnH,GAAA,OACAsE,EAAA8C,iBAAApH,EAAAqG,KAEAtC,GAlLAD,EA5HA,SA4HAQ,GACA,IAAAR,GACAc,UACAC,EAAA,EACAC,EAAA,EAEAC,MAAA,EACApB,EAAA,EACAqB,GAAA,EACAC,GAAA,GAEAC,EAAApB,EACAqB,EAAArB,EAAAc,OAQA,SAAAyC,EAAA9B,GACA,GAAAJ,EAAA,GAAAI,OACA,OAAAJ,EAAA,GAgBA,SAAAmC,EAAAC,EAAA5B,EAAAC,EAAAC,QACAtB,IAAAgD,IAGA3B,GACA2B,EAAAzB,GAAAH,EAAAI,MACAwB,EAAAvB,GAAAL,EAAAM,MACAsB,EAAAhC,GAAA,IAEAgC,EAAAvB,GAAAuB,EAAA1C,EACA0C,EAAAzB,GAAAyB,EAAAzC,GAEAyC,EAAA1C,EAAAc,EAAAI,MACAwB,EAAAzC,EAAAa,EAAAM,MAAAE,OAAAC,QACAmB,EAAA1B,OACAA,IACA0B,EAAAhC,IAAA,EACA/B,EAAA,KACAlB,EAAAlC,YAIA,SAAAoH,EAAAlB,GAlCA,IACAM,EA2CA,MATA,cAAAN,EAAAI,KACAY,EAhDA,WACA,QAAAnC,EAAA,GAAAI,GACA,OAAAJ,EAAA,GA8CAsC,GAAAnB,GAAA,MACA,cAAAA,EAAAI,KACAY,EAAAD,EAAA,GAAAf,GAAA,MACA,YAAAA,EAAAI,MACAY,EAAAD,EAAA,GAAAf,GAAA,MAvCAM,EAAA,GACA,IAAAzB,EAAA,GAAAI,KACA,IAAAqB,IACA1B,EAAAL,EAAAM,EAAA,GAAAN,EACAK,EAAAJ,EAAAK,EAAA,GAAAL,GAEA8B,GAAA,GAEA1B,EAAAH,MAAA6B,EAkCAN,EAAAQ,kBACA,EAUA,OAPAxC,OAAAC,IAAAD,EAAAyC,SAAAzC,EACA9B,EAAA,oBACAsB,EAAAc,OAAAoC,MAAAnC,EAAA,EAAAC,EAAA,EAAAmC,GAAA,EAAAC,GAAA,EAAArB,MAAA,EAAAN,IAAA,OAEA,mCAAA4B,QAAA,SAAAnH,GAAA,OACAsE,EAAA8C,iBAAApH,EAAAwH,KAEA1D,GAtIAD,EAtEA,SAsEAA,EAAA6D,GACA5E,GACAY,IAEAgE,EACA/E,EAAAgF,aAAA,aACAhF,EAAAiF,YAAA,EACAjF,EAAAkF,yBAAA,cACAlE,IAAAmE,YAAAlE,IAAAmE,eACApE,EAAAqE,OAAAC,MAAAH,YAAA,GACAlE,EAAAoE,OAAAE,OAAAH,aAAA,GAGApF,EAAAwF,UAAA,IAAAxE,EAAAC,GACAK,EAAAmE,QACAzF,EAAA0F,UAAA,QACA1F,EAAAiF,YAAA,GACAjF,EAAA2F,SAAA,EAAAtF,EAAAD,EAAA,KACAJ,EAAA2F,SAAAvF,EAAA,IAAAC,GACAL,EAAAiF,YAAA,EACAjF,EAAA4F,UAAAnI,EAAA,KACAuC,EAAAgF,aAAA,aACA,IAAAtE,EAAA0B,QAAAnC,GAAAC,EAaA,IAAAQ,EAAA0B,OAAAlC,GACAS,EAAAqD,OAAA,EACA,IAAAtD,EAAA0B,MACAlC,GAAA,EACAA,GAAA,IAAAQ,EAAA0B,MAIAd,EAAAuE,UAAAnF,EAAAuB,OAAA,GAAAvB,EAAAuB,OAAA,KAHA/B,GAAA,EACAoB,EAAAwE,SAAApF,EAAAuB,OAAA,GAAAvB,EAAAuB,OAAA,OAKA/B,GAAA,EACAD,GAAA,GAxBA,IAAAS,EAAA0B,OACAnC,GAAA,EACAa,MAEAQ,EAAAyE,QAAArF,EAAAX,GACAY,EAAA0D,MAAAnC,EAAAnC,EAAAmC,EAAAC,EAAApC,EAAAoC,IACAlC,EACAa,IACAH,EAAAqD,OAAAlE,IACAG,GAAA,IAiBA+F,sBAAA9E,IA9DAH,EAzDA,WA0DAZ,GAAA,EACAmB,EAAA2E,WAAAjG,IApBAc,EAvCA,WA2CA,IAFAR,EAAAoF,UAAA,QACApF,EAAA4F,UAAA,KAAAlH,EAAAsG,MACA1E,EAAAD,EAAAqD,OAAApD,IAAA,CACA,IAAAoC,EAAArC,EAAAC,GACA,MAAAC,IACAP,EAAA6F,YACA7F,EAAA8F,OAAAvF,EAAAqB,EAAArB,EAAAsB,GACA7B,EAAA+F,OAAArD,EAAAd,EAAAc,EAAAb,GACA7B,EAAAgG,QAAA,QACAhG,EAAAiG,UAEA1F,GAAAqB,EAAAc,EAAAd,EAAAC,EAAAa,EAAAb,KAnDAxC,EAAAvB,KACAwB,EAAApC,EAAA,EAFA,kBAEAY,KAAAd,KAAAkJ,cACA5E,EACA/B,EAAA,SAAAuC,EAAAqE,GAEA,IADA,IAAA7C,EAAA,EACAA,EAAAxB,IAAA,IAAAqE,EAAA7C,SAEA9D,EAAA,EAEAC,GAAAmC,EAAA,EAAAC,EAAA,GACAnC,EAAAqF,OAAAqB,WAAA,MACAzG,GAAA,EACAC,GAAA,EACAC,GAAA,EAdAqB,EAAAE,KAAA,GAgBAtD,KAAAM,gBAAAkB,GAhBA,QAgBAZ,EAhBAwC,EAAAmF,KAmBAlJ,EAAA2G,SAAAwC,cAAA,UACAxG,EAAA3C,EAAA6H,MAAAtG,EAAAsG,MACAjF,EAAA5C,EAAA8H,OAAAvG,EAAAuG,QACAjF,EAAA7C,EAAAiJ,WAAA,OACAhB,UAAA,cACApF,EAAAqF,SAAA,IAAAvF,EAAAC,GACAC,EAAAsF,UAAA5G,EAAA,KACAuB,EAAAiD,OAAA2B,WAAAnG,EAAAsG,MACA9E,EAAA,IAAAxB,EAAAuG,OACA9E,EAAA+C,OAAA2B,WAAA,IAAA5E,EAAAC,EAGAE,EAAAW,EAAAgE,QACArF,EAAA6G,KAAA,cAGAlG,KACAC,EAAA,EACAC,EAAA,KA0BAG,EAAAqE,OAAAC,MACArE,EAAAoE,OAAAE,OACAvE,EAAA,EACAC,EAAA,EAwDA+E,sBAAA9E,GAwMAI,EAAA,WACA,IAiBAtB,EAjBA8G,GAAA,aACAC,GAAA,aACAxE,EAAAuE,EACAE,EAAAD,EACAE,EAAAxG,EACAyG,EAAA,EAEAC,GAAAjF,EAAA,EAAAC,EAAA,GACAiF,GAAAlF,EAAA,EAAAC,EAAA,GACAkF,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAMAC,GAAAvF,EAAA,EAAAC,EAAA,GACAuF,GAAA,EA2FA,OAzFAC,cADA,WAEA3H,EAAAgF,aAAA,cAEAS,MAJA,WAKAiC,GACAtJ,KAAA8C,SAEAlB,EAAAgF,aAAAzC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAqF,MAVA,WAWAX,EAAA,EACAC,EAAA,EACAO,EAAAvF,EAAA,EACAuF,EAAAtF,EAAA,EACAuF,GAAA,GAEAZ,SACAC,YACA7F,OAnBA,WAoBAwG,GAAA,EACAnF,EAAA,GAAAA,EAAA,GAAAsF,KAAAC,IAAAZ,GAAAD,EACA1E,EAAA,KAAAA,EAAA,GAAAsF,KAAAE,IAAAb,GAAAD,GACA1E,EAAA,GAAAkF,EAAAvF,EACAK,EAAA,GAAAkF,EAAAtF,EACA/D,KAAA4J,SAAA,EAAAf,EACA,IAAAgB,EAAA1F,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAyE,EAAA,GAAAzE,EAAA,GAAA0F,EACAjB,EAAA,IAAAzE,EAAA,GAAA0F,EACAjB,EAAA,IAAAzE,EAAA,GAAA0F,EACAjB,EAAA,GAAAzE,EAAA,GAAA0F,GAEAlC,QAhCA,SAgCAmC,GAAA,IAEAC,EAAAC,EAFApF,EAAAqF,UAAArE,OAAA,QAAApC,IAAAyG,UAAA,GAAAA,UAAA,MAUA,OAPAX,GACAtJ,KAAA8C,SAEAiH,EAAAD,EAAAhG,EAAAK,EAAA,GACA6F,EAAAF,EAAA/F,EAAAI,EAAA,GACAS,EAAAd,EAAAiG,EAAAnB,EAAA,GAAAoB,EAAApB,EAAA,GACAhE,EAAAb,EAAAgG,EAAAnB,EAAA,GAAAoB,EAAApB,EAAA,GACAhE,GAEAsF,SA5CA,SA4CAJ,GAAA,IAAAlF,EAAAqF,UAAArE,OAAA,QAAApC,IAAAyG,UAAA,GAAAA,UAAA,MAOA,OALAX,GACAtJ,KAAA8C,SAEA8B,EAAAd,EAAAgG,EAAAhG,EAAAK,EAAA,GAAA2F,EAAA/F,EAAAI,EAAA,GAAAA,EAAA,GACAS,EAAAb,EAAA+F,EAAAhG,EAAAK,EAAA,GAAA2F,EAAA/F,EAAAI,EAAA,GAAAA,EAAA,GACAS,GAEA8C,SArDA,SAqDAyC,EAAAC,GAEAd,GACAtJ,KAAA8C,SAEAiG,EAAAjF,EAAAqG,EAAArG,EACAiF,EAAAhF,EAAAoG,EAAApG,EACA,IAAAD,EAAAsG,EAAAtG,EAAAiF,EAAAjF,EACAC,EAAAqG,EAAArG,EAAAgF,EAAAhF,EACAkF,EAAAQ,KAAAY,KAAAvG,IAAAC,KACAqF,EAAAK,KAAAa,MAAAvG,EAAAD,GACAoF,EAAAL,EACAM,EAAAL,EACA9I,KAAA2H,QAAAoB,EAAAC,IAEAvB,UApEA,SAoEA0C,EAAAC,EAAAG,GACAjB,GACAtJ,KAAA8C,SAEA,IAAAgB,EAAAsG,EAAAtG,EAAAqG,EAAArG,EACAC,EAAAqG,EAAArG,EAAAoG,EAAApG,EACAyG,EAAAf,KAAAY,KAAAvG,IAAAC,KAEA,GADA8E,EAAAK,GAAAsB,EAAAvB,IACAsB,EAAA,CACA,IAAAE,EAAAhB,KAAAa,MAAAvG,EAAAD,GACAgF,EAAAK,GAAAsB,EAAArB,GAEApJ,KAAA8C,SACAuG,EAAAvF,EAAAqG,EAAArG,EAAAkF,EAAAlF,EAAAK,EAAA,GAAA6E,EAAAjF,EAAAI,EAAA,GACAkF,EAAAtF,EAAAoG,EAAApG,EAAAiF,EAAAlF,EAAAK,EAAA,GAAA6E,EAAAjF,EAAAI,EAAA,GACAmF,GAAA,GAEAzB,WArFA,SAqFA6C,GACA9I,EAAA8I,EACApB,GAAA,IA5GA,GAlUA,yBAAAlG,EAAAuH,SAAArJ,EAAAtB,SAAA,yBAAAkB,EAAAmG,MAAArH,KAAAiK,YAAA,KCzEeW,GADEC,OAFjB,WAA0B,IAAaC,EAAb9K,KAAa+K,eAA0BC,EAAvChL,KAAuCiL,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,cAAwBF,EAAA,UAAeG,IAAA,SAAAC,OAAoB5G,GAAA,YAA3IxE,KAA0JqL,GAAA,KAAAL,EAAA,OAAwBE,YAAA,uDAAiEF,EAAA,UAAeE,YAAA,uBAAAI,IAAuCC,MAAzSvL,KAAySJ,aAAuBoL,EAAA,QAAaE,YAAA,eAAAE,OAAkCI,cAAA,UAA/WxL,KAAqYqL,GAAA,0BAArYrL,KAAqYqL,GAAA,KAAAL,EAAA,UAA4DE,YAAA,0CAAAI,IAA0DC,MAA3fvL,KAA2fF,4BAAsCkL,EAAA,QAAaE,YAAA,cAAAE,OAAiCI,cAAA,UAA/kBxL,KAAqmBqL,GAAA,+BAE9mBI,oBCCjB,IAcAC,EAdyBC,EAAQ,OAcjCC,CACE5M,EACA4L,GATF,EAVA,SAAAiB,GACEF,EAAQ,SAaV,kBAEA,MAUeG,EAAA,QAAAJ,EAAiB","file":"static/js/7.96e859602577f910faa0.js","sourcesContent":["<template>\n  <div class=\"modal--sa\">\n    <canvas\n      ref=\"canvas\"\n      id=\"canvas\"\n    ></canvas>\n    <div class=\"modal__actions fullwidth modal--sa__action rounded\">\n      <button\n        class=\"modal__btn fullwidth\"\n        v-on:click=\"hideModal\"\n      >\n        <span\n          aria-hidden=\"true\"\n          class=\"fas fa-times\"\n        />\n        Anuluj\n      </button>\n      <button\n        class=\"modal__btn fullwidth modal__btn--violet\"\n        v-on:click=\"saveAppointmentAgreement\"\n      >\n        <span\n          aria-hidden=\"true\"\n          class=\"fas fa-save\"\n        />\n        Zapisz\n      </button>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { API_URL } from '@/apollo/constants'\nimport { mapActions, mapGetters } from 'vuex'\nimport '../modal.scss'\n\nexport default {\n  name: 'SignAgreement',\n  data: function () {\n    return {\n      apiUrl: API_URL,\n      drawing: null\n    }\n  },\n  computed: {\n    ...mapGetters({\n      data: 'modal/data',\n      historyData: 'addHistory/data'\n    })\n  },\n  methods: {\n    ...mapActions({\n      hideModal: 'modal/hide',\n      setHistory: 'addHistory/setData'\n    }),\n    saveAppointmentAgreement: function () {\n      let canvas = this.drawing\n      const file = canvas.toBlob(file => {\n        const payload = Object.assign(this.historyData, {\n          agreement: file\n        })\n\n        this.setHistory(payload)\n        this.hideModal()\n      })\n    },\n    addImageProcess: function (src) {\n      return new Promise((resolve, reject) => {\n        let img = new Image()\n        img.onload = () => resolve(img)\n        img.onerror = reject\n        img.src = src\n        img.crossOrigin = 'anonymous'\n      })\n    }\n  },\n  mounted: async function () {\n    var self = this\n    const imageUrl = `${API_URL}/storage/files/${this.data.template}`\n    const U = undefined\n    const doFor = (count, callback) => {\n      var i = 0\n      while (i < count && callback(i++) !== true) {}\n    }\n    const drawModeDelay = 3 // number of frames to delay drawing just incase the pinch touch is\n    // slow on the second finger\n    const worldPoint = {x: 0, y: 0} // worldf point is in the coordinates system of the drawing\n    const ctx = canvas.getContext('2d')\n    var drawMode = false // true while drawing\n    var pinchMode = false // true while pinching\n    var startup = true // will call init when true\n\n    var img = await this.addImageProcess(imageUrl)\n\n    // the drawing image\n    const drawing = document.createElement('canvas')\n    const W = (drawing.width = img.width)\n    const H = (drawing.height = img.height)\n    const dCtx = drawing.getContext('2d')\n    dCtx.fillStyle = 'transparent'\n    dCtx.fillRect(0, 0, W, H)\n    dCtx.drawImage(img, 0, 0)\n    const mobileRatio = window.innerWidth / img.width\n    const desktopRatio = (960 / img.height)\n    const imageScale = window.innerWidth < 960 ? mobileRatio : desktopRatio\n\n    // pointer is the interface to the touch\n    const pointer = setupPointingDevice(canvas)\n    ctx.font = '16px arial.'\n\n    // drawing functions and data\n    const drawnPoints = [] // array of draw points\n    var iPoints = 0\n    var lastPt = null\n\n    function drawOnDrawing () {\n      // draw all points on drawingPoint array\n      dCtx.fillStyle = 'black'\n      dCtx.lineWidth = img.width * 0.005\n      for (; iPoints < drawnPoints.length; iPoints++) {\n        const point = drawnPoints[iPoints]\n        if (lastPt != null) {\n          dCtx.beginPath()\n          dCtx.moveTo(lastPt.x, lastPt.y)\n          dCtx.lineTo(point.x, point.y)\n          dCtx.lineCap = 'round'\n          dCtx.stroke()\n        }\n        lastPt = {x: point.x, y: point.y}\n      }\n    }\n\n    // called once at start\n    function init () {\n      startup = false\n      view.setContext(ctx)\n    }\n\n    // standard vars\n    var w = canvas.width\n    var h = canvas.height\n    var cw = w / 2 // center\n    var ch = h / 2\n    var globalTime\n\n    // main update function\n    function update (timer) {\n      if (startup) {\n        init()\n      }\n      globalTime = timer\n      ctx.setTransform(1, 0, 0, 1, 0, 0) // reset transform\n      ctx.globalAlpha = 1 // reset alpha\n      ctx.globalCompositeOperation = 'source-over'\n      if (w !== innerWidth || h !== innerHeight) {\n        cw = (w = canvas.width = innerWidth) / 2\n        ch = (h = canvas.height = innerHeight) / 2\n      }\n\n      ctx.clearRect(0, 0, w, h)\n      view.apply()\n      ctx.fillStyle = 'black'\n      ctx.globalAlpha = 0.4\n      ctx.fillRect(5, H, W - 5, 5)\n      ctx.fillRect(W, 5, 5, H)\n      ctx.globalAlpha = 1\n      ctx.drawImage(drawing, 0, 0)\n      ctx.setTransform(1, 0, 0, 1, 0, 0)\n      if ((pointer.count === 1 || drawMode) && !pinchMode) {\n        if (pointer.count === 0) {\n          drawMode = false\n          drawOnDrawing()\n        } else {\n          view.toWorld(pointer, worldPoint)\n          drawnPoints.push({x: worldPoint.x, y: worldPoint.y})\n          if (drawMode) {\n            drawOnDrawing()\n          } else if (drawnPoints.length > drawModeDelay) {\n            drawMode = true\n          }\n        }\n      } else if (pointer.count === 2 || pinchMode) {\n        drawnPoints.length = 0 // dump any draw points\n        if (pointer.count === 0) {\n          pinchMode = false\n        } else if (!pinchMode && pointer.count === 2) {\n          pinchMode = true\n          view.setPinch(pointer.points[0], pointer.points[1])\n        } else {\n          view.movePinch(pointer.points[0], pointer.points[1])\n        }\n      } else {\n        pinchMode = false\n        drawMode = false\n      }\n      requestAnimationFrame(update)\n    }\n\n    requestAnimationFrame(update)\n\n    function mouse (element) {\n      const mouse = {\n        points: [],\n        x: 0,\n        y: 0,\n        // isTouch : true,\n        count: 0,\n        w: 0,\n        rx: 0,\n        ry: 0\n      }\n      var m = mouse\n      var t = mouse.points\n\n      function newMouse () {\n        if (t[0].id === -1) {\n          return t[0]\n        }\n      }\n\n      function getMouse (id) {\n        if (t[0].id === id) {\n          return t[0]\n        }\n      }\n\n      function mouseDo () {\n        var tCount = 0\n        if (t[0].id !== -1) {\n          if (tCount === 0) {\n            m.x = t[0].x\n            m.y = t[0].y\n          }\n          tCount += 1\n        }\n        m.count = tCount\n      }\n\n      function setMouse (mousePoint, point, start, down) {\n        if (mousePoint === undefined) {\n          return\n        }\n        if (start) {\n          mousePoint.oy = point.pageX\n          mousePoint.ox = point.pageY\n          mousePoint.id = 0\n        } else {\n          mousePoint.ox = mousePoint.x\n          mousePoint.oy = mousePoint.y\n        }\n        mousePoint.x = point.pageX\n        mousePoint.y = point.pageY - window.scrollY\n        mousePoint.down = down\n        if (!down) {\n          mousePoint.id = -1\n          lastPt = null\n          self.drawing = drawing\n        }\n      }\n\n      function mouseEvent (e) {\n        if (e.type === 'mousedown') {\n          setMouse(newMouse(), e, true, true)\n        } else if (e.type === 'mousemove') {\n          setMouse(getMouse(0), e, false, true)\n        } else if (e.type === 'mouseup') {\n          setMouse(getMouse(0), e, false, false)\n        }\n        mouseDo()\n        e.preventDefault()\n        return false\n      }\n\n      element = element === undefined ? document : element\n      doFor(1, () =>\n        mouse.points.push({x: 0, y: 0, dx: 0, dy: 0, down: false, id: -1})\n      );\n      ['mousedown', 'mousemove', 'mouseup'].forEach(name =>\n        element.addEventListener(name, mouseEvent)\n      )\n      return mouse\n    }\n\n    function touch (element) {\n      const touch = {\n        points: [],\n        x: 0,\n        y: 0,\n        // isTouch : true,\n        count: 0,\n        w: 0,\n        rx: 0,\n        ry: 0\n      }\n      var m = touch\n      var t = touch.points\n\n      function newTouch () {\n        for (var j = 0; j < m.pCount; j++) {\n          if (t[j].id === -1) {\n            return t[j]\n          }\n        }\n      }\n\n      function getTouch (id) {\n        for (var j = 0; j < m.pCount; j++) {\n          if (t[j].id === id) {\n            return t[j]\n          }\n        }\n      }\n\n      function setTouch (touchPoint, point, start, down) {\n        if (touchPoint === undefined) {\n          return\n        }\n        if (start) {\n          touchPoint.oy = point.pageX\n          touchPoint.ox = point.pageY\n          touchPoint.id = point.identifier\n        } else {\n          touchPoint.ox = touchPoint.x\n          touchPoint.oy = touchPoint.y\n        }\n        touchPoint.x = point.pageX\n        touchPoint.y = point.pageY - window.scrollY\n        touchPoint.down = down\n        if (!down) {\n          touchPoint.id = -1\n          lastPt = null\n          self.drawing = drawing\n        }\n      }\n\n      function mouseEmulator () {\n        var tCount = 0\n        for (var j = 0; j < m.pCount; j++) {\n          if (t[j].id !== -1) {\n            if (tCount === 0) {\n              m.x = t[j].x\n              m.y = t[j].y\n            }\n            tCount += 1\n          }\n        }\n        m.count = tCount\n      }\n\n      function touchEvent (e) {\n        var i, p\n        p = e.changedTouches\n        if (e.type === 'touchstart') {\n          for (i = 0; i < p.length; i++) {\n            setTouch(newTouch(), p[i], true, true)\n          }\n        } else if (e.type === 'touchmove') {\n          for (i = 0; i < p.length; i++) {\n            setTouch(getTouch(p[i].identifier), p[i], false, true)\n          }\n        } else if (e.type === 'touchend') {\n          for (i = 0; i < p.length; i++) {\n            setTouch(getTouch(p[i].identifier), p[i], false, false)\n          }\n        }\n        mouseEmulator()\n        e.preventDefault()\n        return false\n      }\n\n      touch.pCount = navigator.maxTouchPoints\n      element = element === undefined ? document : element\n      doFor(navigator.maxTouchPoints, () =>\n        touch.points.push({x: 0, y: 0, dx: 0, dy: 0, down: false, id: -1})\n      );\n      ['touchstart', 'touchmove', 'touchend'].forEach(name =>\n        element.addEventListener(name, touchEvent)\n      )\n      return touch\n    }\n\n    function setupPointingDevice (element) {\n      if (navigator.maxTouchPoints === undefined) {\n        if (\n          navigator.appVersion.indexOf('Android') > -1 ||\n            navigator.appVersion.indexOf('iPhone') > -1 ||\n            navigator.appVersion.indexOf('iPad') > -1\n        ) {\n          navigator.maxTouchPoints = 5\n        }\n      }\n      if (navigator.maxTouchPoints > 0) {\n        return touch(element)\n      } else {\n        return mouse(element)\n      }\n    }\n\n    const view = (() => {\n      const matrix = [1, 0, 0, 1, 0, 0] // current view transform\n      const invMatrix = [1, 0, 0, 1, 0, 0] // current inverse view transform\n      var m = matrix // alias\n      var im = invMatrix // alias\n      var scale = imageScale // current scale\n      var rotate = 0\n      var maxScale = 1\n      const pinch1 = {x: 0, y: 0} // holds the pinch origin used to pan zoom and rotate with two touch points\n      const pinch1R = {x: 0, y: 0}\n      var pinchDist = 0\n      var pinchScale = 1\n      var pinchAngle = 0\n      var pinchStartAngle = 0\n      const workPoint1 = {x: 0, y: 0}\n      const workPoint2 = {x: 0, y: 0}\n      const wp1 = workPoint1 // alias\n      const wp2 = workPoint2 // alias\n      var ctx\n      const pos = {x: 0, y: 0} // current position of origin\n      var dirty = true\n      const API = {\n        canvasDefault () {\n          ctx.setTransform(1, 0, 0, 1, 0, 0)\n        },\n        apply () {\n          if (dirty) {\n            this.update()\n          }\n          ctx.setTransform(m[0], m[1], m[2], m[3], m[4], m[5])\n        },\n        reset () {\n          scale = 1\n          rotate = 0\n          pos.x = 0\n          pos.y = 0\n          dirty = true\n        },\n        matrix,\n        invMatrix,\n        update () {\n          dirty = false\n          m[3] = m[0] = Math.cos(rotate) * scale\n          m[2] = -(m[1] = Math.sin(rotate) * scale)\n          m[4] = pos.x\n          m[5] = pos.y\n          this.invScale = 1 / scale\n          var cross = m[0] * m[3] - m[1] * m[2]\n          im[0] = m[3] / cross\n          im[1] = -m[1] / cross\n          im[2] = -m[2] / cross\n          im[3] = m[0] / cross\n        },\n        toWorld (from, point = {}) {\n          // convert screen to world coords\n          var xx, yy\n          if (dirty) {\n            this.update()\n          }\n          xx = from.x - m[4]\n          yy = from.y - m[5]\n          point.x = xx * im[0] + yy * im[2]\n          point.y = xx * im[1] + yy * im[3]\n          return point\n        },\n        toScreen (from, point = {}) {\n          // convert world coords to screen coords\n          if (dirty) {\n            this.update()\n          }\n          point.x = from.x * m[0] + from.y * m[2] + m[4]\n          point.y = from.x * m[1] + from.y * m[3] + m[5]\n          return point\n        },\n        setPinch (p1, p2) {\n          // for pinch zoom rotate pan set start of pinch screen coords\n          if (dirty) {\n            this.update()\n          }\n          pinch1.x = p1.x\n          pinch1.y = p1.y\n          var x = p2.x - pinch1.x\n          var y = p2.y - pinch1.y\n          pinchDist = Math.sqrt(x * x + y * y)\n          pinchStartAngle = Math.atan2(y, x)\n          pinchScale = scale\n          pinchAngle = rotate\n          this.toWorld(pinch1, pinch1R)\n        },\n        movePinch (p1, p2, dontRotate) {\n          if (dirty) {\n            this.update()\n          }\n          var x = p2.x - p1.x\n          var y = p2.y - p1.y\n          var pDist = Math.sqrt(x * x + y * y)\n          scale = pinchScale * (pDist / pinchDist)\n          if (!dontRotate) {\n            var ang = Math.atan2(y, x)\n            rotate = pinchAngle + (ang - pinchStartAngle)\n          }\n          this.update()\n          pos.x = p1.x - pinch1R.x * m[0] - pinch1R.y * m[2]\n          pos.y = p1.y - pinch1R.x * m[1] - pinch1R.y * m[3]\n          dirty = true\n        },\n        setContext (context) {\n          ctx = context\n          dirty = true\n        }\n      }\n      return API\n    })()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n  @import \"../../../main\";\n\n  .modal--sa {\n    max-width: 90vw;\n\n    &__action {\n      position: fixed;\n      bottom: 1rem;\n      left: 1rem;\n      width: calc(100% - 2rem);\n      border-radius: 0.5rem;\n      overflow: hidden;\n      z-index: 100;\n\n      span {\n        margin-right: 0.5rem;\n      }\n    }\n\n    canvas {\n      position: absolute;\n      top: 0px;\n      left: 0px;\n      z-index: 2;\n      width: 100vw;\n      height: 100vh;\n    }\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/modal/modals/SignAgreement.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"modal--sa\"},[_c('canvas',{ref:\"canvas\",attrs:{\"id\":\"canvas\"}}),_vm._v(\" \"),_c('div',{staticClass:\"modal__actions fullwidth modal--sa__action rounded\"},[_c('button',{staticClass:\"modal__btn fullwidth\",on:{\"click\":_vm.hideModal}},[_c('span',{staticClass:\"fas fa-times\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\"\\n      Anuluj\\n    \")]),_vm._v(\" \"),_c('button',{staticClass:\"modal__btn fullwidth modal__btn--violet\",on:{\"click\":_vm.saveAppointmentAgreement}},[_c('span',{staticClass:\"fas fa-save\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\"\\n      Zapisz\\n    \")])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-36234499\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/modal/modals/SignAgreement.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-36234499\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./SignAgreement.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SignAgreement.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./SignAgreement.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-36234499\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./SignAgreement.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-36234499\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/modal/modals/SignAgreement.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}